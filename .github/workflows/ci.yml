name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  frontend:
    name: Build frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.8.1
        with:
          node-version: lts/*

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3.3.2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn global add @quasar/cli
          yarn install

      - name: Build dist files
        run: |
          yarn build

      - name: Upload dist
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: frontend/dist

  backend:
    name: Lint backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.x

      - uses: Gr1N/setup-poetry@v8

      - uses: actions/cache@v3.3.2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install -vvv

      - uses: suo/flake8-github-action@v1
        with:
          checkName: ${{ github.workflow }}

      - uses: jakebailey/pyright-action@v1
        with:
          python-version: 3.8
